---
import Prism from 'prismjs'
import 'prismjs/components/prism-css'
import 'prismjs/components/prism-diff'
import 'prismjs/components/prism-docker'
import 'prismjs/components/prism-elixir'
import 'prismjs/components/prism-go'
import 'prismjs/components/prism-hcl'
import 'prismjs/components/prism-java'
import 'prismjs/components/prism-json'
import 'prismjs/components/prism-python'
import 'prismjs/components/prism-ruby'
import 'prismjs/components/prism-sql'
import 'prismjs/components/prism-typescript'
import 'prismjs/components/prism-yaml'
import * as interfaces from '../../lib/interfaces'
import Caption from './Caption.astro'

export interface Props {
  block: interfaces.Block
}

const { block } = Astro.props

const code = block.Code.RichTexts.map(
  (richText: interfaces.RichText) => richText.Text.Content
).join('')
const language = block.Code.Language.toLowerCase()
const grammer =
  Prism.languages[language.toLowerCase()] || Prism.languages.javascript
---

<div class="code">
  <div>
    {
      /* prettier-ignore */
      language === 'mermaid' ? (
        <code class="mermaid">{code}</code>
      ) : (
        <>
          <div>
            <button class="copy" data-code={code} data-done-text="Copied!">
              Copy
            </button>
          </div>
          <code set:html={Prism.highlight(code, grammer, language)} />
        </>
      )
    }
  </div>
  <Caption richTexts={block.Code.Caption} />
</div>

<script>
  import mermaid from 'mermaid'
  mermaid.initialize({ startOnLoad: true, theme: 'neutral' })
</script>

<script>
  document.querySelectorAll('button.copy').forEach((button) => {
    button.addEventListener('click', (ev) => {
      navigator.clipboard
        .writeText(ev.target.getAttribute('data-code'))
        .then(() => {
          const originalText = ev.target.innerText

          ev.target.innerText = ev.target.getAttribute('data-done-text')

          setTimeout(() => {
            ev.target.innerText = originalText
          }, 3000)
        })
    })
  })
</script>

<style>
  .code {
    display: block;
    width: 100%;
    margin-bottom: 0.6rem;
  }
  .code > div {
    background: #444E50;
    border-radius: var(--radius);
  }
  .code > div div {
    display: flex;
    justify-content: flex-end;
  }
  .code button.copy {
    display: block;
    width: 4rem;
    border: 0;
    border-radius: var(--radius);
    /* background-color: rgba(227, 226, 224, 0.5); */
    color: var(--fg);
    line-height: 1.2rem;
    cursor: pointer;
  }
  .code code {
    display: block;
    overflow: auto;
    padding: 0.8rem 2rem 2rem;
    font-size: 0.9rem;
    line-height: 1.2rem;
    white-space: pre;
    width: 100px;
    min-width: 100%;
    overflow-x: auto;
    &::-webkit-scrollbar {
      height: 10px;
    }
    &::-webkit-scrollbar-thumb {
      background: #fbfbfb7d;
      border-radius: 10px;
    }
    /* &::-webkit-scrollbar-track {
      background: #444E50;
    } */
  }
  .code code.mermaid {
    padding: 2rem;
    border-radius: var(--radius);
  }
  .code code {
    color: #F4F5F5;
    /* padding: 0; */
    background: #444E50 !important;
    /* border-radius: 0; */
  }

  /* Mermaidのカスタムスタイル */
  .code code.mermaid .label {
    color: #your-color-here !important;
  }
  
  /* LinkTextのスタイルを変更 */
  .code code.mermaid .linkText {
    color: #your-link-color-here !important;
    font-weight: bold;
  }
  
  /* その他のMermaid要素のスタイル */
  .code code.mermaid .node rect,
  .code code.mermaid .node circle,
  .code code.mermaid .node ellipse,
  .code code.mermaid .node polygon {
    fill: #your-node-fill-color !important;
    stroke: #your-node-stroke-color !important;
  }
  
  .code code.mermaid .edgePath .path {
    stroke: #your-edge-color !important;
  }
</style>
