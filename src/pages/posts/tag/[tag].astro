---
import type { SelectProperty } from '../../../lib/interfaces.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
// import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
// import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import '../../../styles/notion-color.css'
import PostDates from '../../../components/PostDates.astro'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

// const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout title={`Posts in ${tag}`} description='' path={`/posts/tag/${tag}`} ogImage="">
  <div slot="main" class={styles.main}>
    <header>
      <div class="tag-container">
        <span class="tag">{tag}</span> に関する記事一覧
      </div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
        {posts.map((post) => (
          <ReadMoreLink post={post}>
              <PostTitle post={post} enableLink={true} />
              <PostExcerpt post={post} />
              <PostDates post={post} />
            </ReadMoreLink>
        ))}
        </div>
      )
    }

    <footer>
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="Recommended" posts={rankedPosts} />
    <BlogTagsLink heading="Categories" tags={tags} />
  </div>
</Layout>

<style>
  .tag-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1rem;
    font-weight: normal;
  }
  footer {
    margin-top: 2rem;
  }
  @media (max-width: 640px) {
    .tag-container {
    }
  }
  .tag-container span.tag {
    min-width: 0;
    border-radius: 3px;
    border: 1px solid #8f8f8f;
    padding: 4px 8px;
    line-height: 1.2;
    color: rgb(50, 48, 44);
  }
</style>
